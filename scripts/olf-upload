#!/usr/bin/env python3

import argparse

from olfactometer.upload import main


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-p', '--port', action='store', default='/dev/ttyACM0',
        help='port the Arduino is connected to.'
    )
    parser.add_argument('-d', '--dry-run', action='store_true', default=False,
        help='do not actually upload. just compile.'
    )
    parser.add_argument('-s', '--show-properties', action='store_true',
        default=False, help='shows arduino-cli compilation "build properties" '
        'and exits (without compiling or uploading)'
    )
    parser.add_argument('-v', '--verbose', action='store_true', default=False,
        help='make arduino-cli compilation verbose'
    )
    parser.add_argument('-f', '--fqbn', action='store', default=None,
        help='Fully Qualified Board Name, e.g.: arduino:avr:uno. corresponds to'
        ' arduino-cli -b/--fqbn. mainly for testing compilation with other '
        'boards. your connected board should be detected without needing to '
        'pass this.'
    )
    parser.add_argument('-b', '--build-root', action='store', default=None,
        help='directory to create Arduino sketch and libraries under, '
        'for inspection during troubleshooting. default is a temporary '
        'directory.'
    )
    parser.add_argument('-g', '--arduino-debug-prints', action='store_true',
        default=False, help='compile Arduino code with DEBUG_PRINTS defined. '
        'Arduino will print more stuff over USB and its code size will increase'
        ' slightly.'
    )
    # TODO TODO maybe just set this by default on windows though, in upload.py
    # main? (and then is this option really worth keeping around?)
    parser.add_argument('-n', '--no-symlink', action='store_true',
        default=False, help='copy files instead of symlinking them, when '
        'preparing Arduino sketch and libraries for compilation. might allow '
        'this to work on Windows.'
    )
    args = parser.parse_args()

    main(
        port=args.port,
        fqbn=args.fqbn,
        dry_run=args.dry_run,
        show_properties=args.show_properties,
        arduino_debug_prints=args.arduino_debug_prints,
        build_root=args.build_root,
        verbose=args.verbose
    )

