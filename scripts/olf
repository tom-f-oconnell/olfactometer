#!/usr/bin/env python3

import argparse

from olfactometer import main


if __name__ == '__main__':
    # TODO try to refactor to inherit / share (at least some?) command line
    # arguments with upload.py ?
    parser = argparse.ArgumentParser()
    parser.add_argument('-u', '--upload', action='store_true', default=False,
        help='also uploads Arduino code before running'
    )
    # TODO just detect? or still have this as an option? maybe have on default,
    # and detect by default? (might not be very easy to detect with docker,
    # at least not without using privileged mode as opposed to just passing one
    # specific port... https://stackoverflow.com/questions/24225647 )
    # maybe just use privileged though?
    parser.add_argument('-p', '--port', action='store', default='/dev/ttyACM0',
        help='port the Arduino is connected to. '
        'For uploading and communication.'
    )
    parser.add_argument('-v', '--verbose', action='store_true', default=False)
    parser.add_argument('-t', '--try-parse', action='store_true', default=False,
        help='exit after attempting to parse config'
    )
    parser.add_argument('-i', '--ignore-ack', action='store_true',
        default=False, help='ignores acknowledgement message #s arduino sends. '
        'makes viewing all debug prints easier, as no worry they will interfere'
        ' with receipt of message number.'
    )
    parser.add_argument('config_file', type=str, nargs='?', default=None,
        help='.json/.yaml file containing all required data. see `load` '
        'function. reads config from stdin if not passed.'
    )
    args = parser.parse_args()

    config_file = args.config_file
    port = args.port
    do_upload = args.upload
    ignore_ack = args.ignore_ack
    verbose = args.verbose
    try_parse = args.try_parse

    main(config_file, port=port, do_upload=do_upload, ignore_ack=ignore_ack,
        try_parse=try_parse, verbose=verbose
    )
